---
- hosts: medshake
  become: yes
  vars_files:
    - secrets.yml

  tasks:
    - name: Set timezone to Europe/Paris
      timezone:
        name: Europe/Paris
    
    - name: Install packages
      apt: name={{ item }} update_cache=yes state=latest
      loop: [ 'apache2', 'php', 'mariadb-server', 'ghostscript', 'imagemagick', 'pdftk', 'git', 'curl', 'composer', 'ntp', ufw, 'unattended-upgrades', 'php-gd', 'php-intl', 'php-curl', 'php-zip', 'php-xml', 'php-imagick', 'php-imap', 'php-soap', 'php-mysql', 'php-json', 'php-yaml', 'python-mysqldb' ]

    - name: 
      ufw:
        state: enabled
        rule: allow
        name: '{{ item }}'
      loop:
        - OpenSSH
        - WWW Full

    - name: create APT auto-upgrades configuration
      template:
        src: templates/autoUpgrade/20auto-upgrades.j2
        dest: /etc/apt/apt.conf.d/20auto-upgrades
        owner: root
        group: root
        mode: 0644
      
    - name: create unattended-upgrades configuration
      template:
        src: templates/autoUpgrade/50unattended-upgrades.j2
        dest: /etc/apt/apt.conf.d/50unattended-upgrades
        owner: root
        group: root
        mode: 0644

    - name: Create ehr folders
      file:
        path: /home/ehr/public_html
        state: directory
        recurse: yes
        owner: www-data
        group: www-data
        mode: '0775'

    - name: Download self installer
      get_url:
        url: https://raw.githubusercontent.com/MedShake/MedShakeEHR-base/master/installer/self-installer.php
        dest: /home/ehr/public_html
        owner: www-data
        group: www-data
        mode: '0755'

    - name: modify upload_max_filesize
      lineinfile:
        path: /etc/php/7.3/apache2/php.ini
        regexp: '^upload_max_filesize = 2M'
        line: upload_max_filesize = 20M

    - name: modify post_max_size
      lineinfile:
        path: /etc/php/7.3/apache2/php.ini
        regexp: '^post_max_size = 8M'
        line: post_max_size = 20M
    
    - name: modify max_input_vars
      lineinfile:
        path: /etc/php/7.3/apache2/php.ini
        regexp: '^max_input_vars = 1000'
        line: max_input_vars = 10000

    - name: Create cert folders
      file:
        path: /etc/ssl/msehr.local
        state: directory
        recurse: yes
        owner: root
        group: root
        mode: '0755'
        
    - name: Setup crt
      template:
        src: templates/cert/msehr.local.crt
        dest: /etc/ssl/msehr.local/msehr.local.crt
        owner: root
        group: root
        mode: 0644
    
    - name: Setup csr
      template:
        src: templates/cert/msehr.local.csr
        dest: /etc/ssl/msehr.local/msehr.local.csr
        owner: root
        group: root
        mode: 0644

    - name: Setup key
      template:
        src: templates/cert/msehr.local.key
        dest: /etc/ssl/msehr.local/msehr.local.key
        owner: root
        group: root
        mode: 0600
  
    - name: Setup vhosts configuration.
      template:
        src: templates/msehr.local.conf
        dest: /etc/apache2/sites-available/msehr.local.conf
        owner: root
        group: root
        mode: 0644

    - name: Setup vhosts configuration.
      template:
        src: templates/msehr.local-ssl.conf
        dest: /etc/apache2/sites-available/msehr.local-ssl.conf
        owner: root
        group: root
        mode: 0644

    - name: Enabled mod_rewrite, mod_headers and mod_ssl
      apache2_module: 
        state: present
        name: "{{ item }}" 
      with_items:
        - headers
        - rewrite
        - ssl
      notify: Restart Apache

    - name: deregister default vhosts
      command: a2dissite {{item}} 
      with_items:
        - 000-default.conf 
        - default-ssl.conf
      notify: Restart Apache

    - name: register default vhosts
      command: a2ensite {{item}} 
      with_items:
        - msehr.local
        - msehr.local-ssl
      notify: Restart Apache

    - name: Set the root password 
      mysql_user: login_user=root login_password="{{ root_password }}" user=root password="{{ root_password }}"

    - name: Secure the root user for IPV6 localhost (::1)
      mysql_user: login_user=root login_password="{{ root_password }}" user=root password="{{ root_password }}" host="::1"

    - name: Secure the root user for IPV4 localhost (127.0.0.1)
      mysql_user: login_user=root login_password="{{ root_password }}" user=root password="{{ root_password }}" host="127.0.0.1"

    - name: Secure the root user for localhost domain
      mysql_user: login_user=root login_password="{{ root_password }}" user=root password="{{ root_password }}" host="localhost"

    - name: Secure the root user for server_hostname domain
      mysql_user: login_user=root login_password="{{ root_password }}" user=root password="{{ root_password }}" host="{{ ansible_fqdn }}"

    - name: Deletes anonymous server user
      mysql_user: login_user=root login_password="{{ root_password }}" user="" host_all=yes state=absent

    - name: Removes the test database
      mysql_db: login_user=root login_password="{{ root_password }}" db=test state=absent

    - name: Create database user with password and all database privileges and 'WITH GRANT OPTION'
      mysql_user:
        name: "{{ admin_account }}"
        password: "{{ admin_password }}"
        priv: '*.*:ALL,GRANT'
        state: present
          
  handlers:
    - name: Restart Apache
      service:
        name: apache2
        state: restarted